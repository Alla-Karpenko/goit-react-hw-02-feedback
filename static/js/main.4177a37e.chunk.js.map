{"version":3,"sources":["components/Statistics/Statistics.js","components/Feedback/FeedbackOptions.js","components/Section/Section.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Feedback/Feedback.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","Notification","feedbackStatistics","feedbackPositive","FeedbackOptions","options","onLeaveFeedback","map","option","id","btn","type","name","onClick","Section","title","children","section","App","state","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","sumFeedback","feedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAkBeA,EAfI,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC7C,OAAO,gCACH,oBAAIC,UAAWC,IAAOC,WAAtB,wBACY,IAAVJ,EAAc,oBAAIE,UAAWC,IAAOE,aAAtB,+BAChB,gCACI,uBAAMH,UAAWC,IAAOG,mBAAxB,mBAAmDT,KACnD,uBAAMK,UAAWC,IAAOG,mBAAxB,sBAAsDR,KACtD,uBAAMI,UAAWC,IAAOG,mBAAxB,kBAAkDP,KAClD,uBAAMG,UAAWC,IAAOG,mBAAxB,oBAAoDN,EAAQ,EAAIA,EAAQ,KAJ5E,mDAKI,uBAAME,UAAWC,IAAOI,iBAAxB,gCAA8DN,EAAqB,EAAIA,EAAqB,EAA5G,c,gBCIGO,EAbS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACrB,8BACMD,EAAQE,KAAI,SAAEC,EAAQC,GACpB,OAAO,wBAAQX,UAAWC,IAAOW,IAAcC,KAAK,SAASC,KAAMJ,EAAQK,QAASP,EAA7E,SAA+FE,GAA3DC,S,gBCGvCK,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,0BAASlB,UAAWC,IAAOkB,QAA3B,UACI,oBAAInB,UAAWC,IAAOgB,MAAtB,SAA8BA,IAC7BC,MC4DME,G,kNAxDPC,MAAQ,CACJ1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTW,gBAAkB,SAACc,GACf,IAAMZ,EAASY,EAAMC,OAAOT,KAC5B,EAAKU,UAAS,SAAAC,GACX,OAAO,eAAGf,EAASe,EAAUf,GAAU,O,EAI9CgB,mBAAqB,WAClB,MAAgC,EAAKL,MAErC,OAFA,EAAS1B,KAAT,EAAeC,QAAf,EAAwBC,K,EAK3B8B,gCAAkC,WAC9B,IAAMC,EAAc,EAAKF,qBAEpBG,EAA6B,IADjB,EAAKR,MAAd1B,KACiCiC,EAC1C,OAAOE,KAAKC,MAAMF,I,4CAGrB,WACG,MAA+BG,KAAKX,MAA5B1B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQkC,KAAKN,qBACbnB,EAAU0B,OAAOC,KAAKF,KAAKX,OAEhC,OAEI,8BACI,eAAC,EAAD,CAASJ,MAAM,wBAAf,UAEE,cAAC,EAAD,CACEV,QAASA,EACTC,gBAAiBwB,KAAKxB,kBAGtB,cAAC,EAAD,CACIb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBiC,KAAKL,6C,GAhD/BQ,c,MCHtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,mBAAqB,uCAAuC,iBAAmB,qCAAqC,aAAe,iCAAiC,WAAa,iC,kBCAnMD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,IAAM,yB","file":"static/js/main.4177a37e.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => {\n    return <div>\n        <h2 className={styles.statistics}>Statistics</h2>\n        { total === 0 ? <h2 className={styles.Notification}>No feedback given</h2>  : (\n        <div>\n            <span className={styles.feedbackStatistics}>Good: {good}</span>       \n            <span className={styles.feedbackStatistics}>Neutral: {neutral}</span>       \n            <span className={styles.feedbackStatistics}>Bad: {bad}</span>        \n            <span className={styles.feedbackStatistics}>Total: {total > 0 ? total : 0 }</span>\n            <span className={styles.feedbackPositive}>Positive feedback: {positivePercentage > 0 ? positivePercentage : 0}%</span>\n        </div> \n         )}\n    </div>\n   \n};\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Feedback.module.css';\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n   <div>\n        {options.map(( option, id ) => {\n           return <button className={styles.btn} key={id} type=\"button\" name={option} onClick={onLeaveFeedback}>{option}</button>\n        })}   \n    </div> \n)\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.array.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n  };\n\nexport default FeedbackOptions;","import React from 'react';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n    <section className={styles.section}>\n        <h2 className={styles.title}>{title}</h2>\n        {children}\n    </section>\n);\nexport default Section;\n","import { Component } from 'react';\n\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/Feedback';\nimport Section from './components/Section';\n\n\nimport './styles.module.css';\n    class App extends Component {\n       \n        state = {\n            good: 0,\n            neutral: 0,\n            bad: 0\n        };\n        \n        onLeaveFeedback = (event) => {\n            const option = event.target.name;\n            this.setState(prevState => {\n               return { [option]: prevState[option] + 1\n            }});\n        }\n    \n        countTotalFeedback = () => {\n           const  { good, neutral, bad } = this.state;\n           const sumFeedback = good + neutral + bad;\n           return sumFeedback;\n        };\n    \n        countPositiveFeedbackPercentage = () => {\n            const sumFeedback = this.countTotalFeedback();\n            const { good } = this.state\n           const feedbackPercentage = (good * 100) / sumFeedback;\n           return Math.round(feedbackPercentage);\n        }\n    \n        render() {\n           const { good, neutral, bad } = this.state;\n           const total = this.countTotalFeedback();\n           const options = Object.keys(this.state)\n\n            return (\n                \n                <div>\n                    <Section title=\"Please leave feedback\">\n                    \n                      <FeedbackOptions \n                        options={options} \n                        onLeaveFeedback={this.onLeaveFeedback}\n                      />   \n                       \n                        <Statistics \n                            good={good} \n                            neutral={neutral} \n                            bad={bad} \n                            total={total} \n                            positivePercentage={this.countPositiveFeedbackPercentage()}\n                        /> \n                    </Section>\n                </div>   \n               \n              \n            );\n        }\n    }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackStatistics\":\"Statistics_feedbackStatistics__24AQd\",\"feedbackPositive\":\"Statistics_feedbackPositive__1x0uB\",\"Notification\":\"Statistics_Notification__3dEfd\",\"statistics\":\"Statistics_statistics__2QFok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Feedback_btn__2l22B\"};"],"sourceRoot":""}